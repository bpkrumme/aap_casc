---
- name: Create a Patching schedule
  hosts: all
  become: false
  gather_facts: false
  vars:
    aap_username: "{{ vault_aap_username | default(lookup('env', 'CONTROLLER_USERNAME')) }}"
    aap_password: "{{ vault_aap_password | default(lookup('env', 'CONTROLLER_PASSWORD')) }}"
    aap_hostname: "{{ vault_aap_hostname | default(lookup('env', 'CONTROLLER_HOST')) }}"
    aap_validate_certs: "{{ vault_aap_validate_certs | default(lookup('env', 'CONTROLLER_VERIFY_SSL')) }}"
    controller_validate_certs: "{{ aap_validate_certs }}"
  pre_tasks:
    - name: Set up Authentication
      block:
        - name: Get token for future requests
          ansible.builtin.uri:
            url: https://{{ aap_hostname }}/api/gateway/v1/tokens/
            user: "{{ aap_username }}"
            password: "{{ aap_password }}"
            method: POST
            force_basic_auth: true
            validate_certs: false
            status_code: 201
          register: authtoken_res

        - name: Set the oauth token to be used
          ansible.builtin.set_fact:
            aap_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            aap_oauthtoken_url: "{{ authtoken_res.json.url }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"
      no_log: "{{ controller_configuration_filetree_create_secure_logging | default('false') }}"
      when: aap_oauthtoken is not defined

  roles:
    - role: infra.aap_configuration.controller_schedules
      vars:
        start_month: "{{ schedule_month }}"
        start_day: "{{ schedule_day }}"
        start_year: "{{ schedule_year }}"
        start_time: "{{ schedule_time }}"
        start_date_def: "{{ start_year }}-{{ start_month }}-{{ start_day }} {{ start_time }}"
        controller_schedules:
          - name: Patching {{ schedule_limit }} at {{ start_date_def }}
            description: Patching specific inventory hosts at specified time
            unified_job_template: PATCH - Install Updates and Reboot
            rrule: "{{ lookup('ansible.controller.schedule_rrule', 'none', start_date=(start_date_def)) }}"
            limit: "{{ schedule_limit }}"

  post_tasks:
    - name: Delete the Authentication Token used
      ansible.builtin.uri:
        url: https://{{ aap_hostname }}{{ aap_oauthtoken_url }}
        user: "{{ aap_username }}"
        password: "{{ aap_password }}"
        method: DELETE
        force_basic_auth: true
        validate_certs: "{{ aap_validate_certs }}"
        status_code: 204
      when: aap_oauthtoken_url is defined
